// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/storage/pgstor/pgStor.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	servermodels "github.com/Arti9991/GoKeeper/server/internal/server/servermodels"
	gomock "github.com/golang/mock/gomock"
)

// MockInfoStorage is a mock of InfoStorage interface.
type MockInfoStorage struct {
	ctrl     *gomock.Controller
	recorder *MockInfoStorageMockRecorder
}

// MockInfoStorageMockRecorder is the mock recorder for MockInfoStorage.
type MockInfoStorageMockRecorder struct {
	mock *MockInfoStorage
}

// NewMockInfoStorage creates a new mock instance.
func NewMockInfoStorage(ctrl *gomock.Controller) *MockInfoStorage {
	mock := &MockInfoStorage{ctrl: ctrl}
	mock.recorder = &MockInfoStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInfoStorage) EXPECT() *MockInfoStorageMockRecorder {
	return m.recorder
}

// CloseDataDB mocks base method.
func (m *MockInfoStorage) CloseDataDB() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseDataDB")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseDataDB indicates an expected call of CloseDataDB.
func (mr *MockInfoStorageMockRecorder) CloseDataDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseDataDB", reflect.TypeOf((*MockInfoStorage)(nil).CloseDataDB))
}

// DeleteData mocks base method.
func (m *MockInfoStorage) DeleteData(userID, storageID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteData", userID, storageID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteData indicates an expected call of DeleteData.
func (mr *MockInfoStorageMockRecorder) DeleteData(userID, storageID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteData", reflect.TypeOf((*MockInfoStorage)(nil).DeleteData), userID, storageID)
}

// GetData mocks base method.
func (m *MockInfoStorage) GetData(userID, storageID string) (servermodels.SaveDataInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetData", userID, storageID)
	ret0, _ := ret[0].(servermodels.SaveDataInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetData indicates an expected call of GetData.
func (mr *MockInfoStorageMockRecorder) GetData(userID, storageID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetData", reflect.TypeOf((*MockInfoStorage)(nil).GetData), userID, storageID)
}

// GetDataList mocks base method.
func (m *MockInfoStorage) GetDataList(userID string) ([]servermodels.SaveDataInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataList", userID)
	ret0, _ := ret[0].([]servermodels.SaveDataInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataList indicates an expected call of GetDataList.
func (mr *MockInfoStorageMockRecorder) GetDataList(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataList", reflect.TypeOf((*MockInfoStorage)(nil).GetDataList), userID)
}

// SaveNewData mocks base method.
func (m *MockInfoStorage) SaveNewData(userID string, DataInf servermodels.SaveDataInfo) (servermodels.SaveDataInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveNewData", userID, DataInf)
	ret0, _ := ret[0].(servermodels.SaveDataInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveNewData indicates an expected call of SaveNewData.
func (mr *MockInfoStorageMockRecorder) SaveNewData(userID, DataInf interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveNewData", reflect.TypeOf((*MockInfoStorage)(nil).SaveNewData), userID, DataInf)
}

// UpdateData mocks base method.
func (m *MockInfoStorage) UpdateData(userID string, DataInf servermodels.SaveDataInfo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateData", userID, DataInf)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateData indicates an expected call of UpdateData.
func (mr *MockInfoStorageMockRecorder) UpdateData(userID, DataInf interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateData", reflect.TypeOf((*MockInfoStorage)(nil).UpdateData), userID, DataInf)
}
